/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cpe121.briones.finalproject;

import com.sun.jdi.connect.spi.Connection;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author yuanb
 */
public class SendForm extends javax.swing.JFrame {

    private String accountNumb = "";
    private String user;
    private String receiver;
    private double amounts;
    double receiverBalance;
    
    public SendForm() {
        initComponents();
    }
    public SendForm(String Number) {
        initComponents();
        this.accountNumb = Number;
    }
    public void sendMoney(String senderAcc, String receiverAcc, double amount) {
        DB_connection.init();
        java.sql.Connection c = DB_connection.getConnection();
    try {
        c.setAutoCommit(false);

        // Step 1: Get sender info
        PreparedStatement ps = c.prepareStatement("SELECT Balance, Name FROM accounts WHERE accountnumber = ?");
        ps.setString(1, senderAcc);
        ResultSet rs = ps.executeQuery();

        if (!rs.next()) {
            JOptionPane.showMessageDialog(null, "Sender account not found");
            return;
        }

        double senderBalance = Double.parseDouble(rs.getString("Balance"));
        String senderName = rs.getString("Name");

        if (senderBalance < amount) {
            JOptionPane.showMessageDialog(null, "Insufficient balance");
            return;
        }

        // Step 2: Get receiver info
        ps = c.prepareStatement("SELECT Balance, Name FROM accounts WHERE accountnumber = ?");
        ps.setString(1, receiverAcc);
        rs = ps.executeQuery();

        if (!rs.next()) {
            JOptionPane.showMessageDialog(null, "Receiver account not found");
            return;
        }

        double receiverBalance = Double.parseDouble(rs.getString("Balance"));
        String receiverName = rs.getString("Name");

        // Step 3: Calculate new balances
        double newSenderBal = senderBalance - amount;
        double newReceiverBal = receiverBalance + amount;

        // Step 4: Update sender balance
        ps = c.prepareStatement("UPDATE accounts SET balance = ? WHERE accountnumber = ?");
        ps.setString(1, String.valueOf(newSenderBal));
        ps.setString(2, senderAcc);
        ps.executeUpdate();

        // Step 5: Update receiver balance
        ps.setString(1, String.valueOf(newReceiverBal));
        ps.setString(2, receiverAcc);
        ps.executeUpdate();

        // Step 6: Insert transaction logs
        String timestamp = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date());

        // Sender log
        user = "user_" + senderAcc;
        ps = c.prepareStatement("INSERT INTO " + user + " (Dates, accountnumber, accountname, accountbalance, remarks) VALUES (?, ?, ?, ?, ?)");
        ps.setString(1, timestamp);
        ps.setString(2, senderAcc);
        ps.setString(3, senderName);
        ps.setString(4, String.valueOf(newSenderBal));
        ps.setString(5, "Sent to " + receiverAcc + " Ammount: " + amount);
        ps.executeUpdate();

        // Receiver log
        user  = "user_" + receiverAcc;
        ps = c.prepareStatement("INSERT INTO " + user + " (Dates, accountnumber, accountname, accountbalance, remarks) VALUES (?, ?, ?, ?, ?)");
        ps.setString(1, timestamp);
        ps.setString(2, receiverAcc);
        ps.setString(3, receiverName);
        ps.setString(4, String.valueOf(newReceiverBal));
        ps.setString(5, "Received from " + senderAcc + "Amount: " + amount);
        ps.executeUpdate();

        c.commit(); // All good
        JOptionPane.showMessageDialog(null, "Money sent successfully!");

    } catch (Exception e) {
        try {
            c.rollback(); // On error
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        JOptionPane.showMessageDialog(null, "Transfer failed: " + e.getMessage());
        e.printStackTrace();
    } finally {
        try {
            c.setAutoCommit(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AccountNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        AccountName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        SentAmount = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 420));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Send");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jLabel2.setText("Account Number");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));
        getContentPane().add(AccountNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 290, -1));

        jLabel3.setText("Account Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        AccountName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountNameActionPerformed(evt);
            }
        });
        getContentPane().add(AccountName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 290, -1));

        jLabel4.setText("Amount");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));
        getContentPane().add(SentAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 290, -1));

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AccountNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AccountNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        receiver = AccountNumber.getText();
        amounts = Double.parseDouble(SentAmount.getText());
        sendMoney(accountNumb, receiver, amounts);
        UserFront open = new UserFront(accountNumb);
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountName;
    private javax.swing.JTextField AccountNumber;
    private javax.swing.JTextField SentAmount;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
