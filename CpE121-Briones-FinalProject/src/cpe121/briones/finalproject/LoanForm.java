/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cpe121.briones.finalproject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author yuanb
 */
public class LoanForm extends javax.swing.JFrame {

    private String AccountNumber = "";
    private String AccName = "";
    private String Sbal;

    public LoanForm() {
        initComponents();
    }

    public LoanForm(String Accnumber, String name) {
        initComponents();
        this.AccountNumber = Accnumber;
        this.AccName = name;
        getBalance();
    }

    public void getBalance() {
        DB_connection.init();
        Connection c = DB_connection.getConnection();
        try {
            PreparedStatement ps = c.prepareStatement("SELECT * FROM bank.accounts where accountnumber = '" + AccountNumber + "';");
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                Sbal = rs.getString("Balance");
            }
        } catch (SQLException ex) {

        }
    }

    private void AccountData(String accountloan) {
        DB_connection.init();
        Connection c = null;
        PreparedStatement ps = null;

        try {
            LocalDateTime now = LocalDateTime.now();
            String formatted = now.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));

            c = DB_connection.getConnection();
            c.setAutoCommit(false);

            double balance = Double.parseDouble(Sbal);
            double loanval = Double.parseDouble(accountloan);
            double newBalance = balance + loanval;

            String userTable = "user_" + AccountNumber;

            // 1. Insert transaction record
            String insertSQL = "INSERT INTO " + userTable
                    + " (Dates, accountnumber, accountname, accountbalance, accountloan, remarks) "
                    + "VALUES (?, ?, ?, ?, ?, 'unpaid')";
            ps = c.prepareStatement(insertSQL);
            ps.setString(1, formatted);
            ps.setString(2, AccountNumber);
            ps.setString(3, AccName);
            ps.setDouble(4, newBalance);
            ps.setDouble(5, loanval);

            if (ps.executeUpdate() > 0) {
                ps.close();

                // 2. Update balance in accounts table
                ps = c.prepareStatement("UPDATE accounts SET Balance = ? WHERE accountnumber = ?");
                ps.setDouble(1, newBalance);
                ps.setString(2, AccountNumber);
                if (ps.executeUpdate() > 0) {
                    ps.close();

                    c.commit();
                    JOptionPane.showMessageDialog(null, "Approved!");
                    UserFront open = new UserFront(AccountNumber);
                    open.setVisible(true);
                    this.dispose();

                } else {
                    JOptionPane.showMessageDialog(null, "Failed to update account balance.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Failed to insert transaction.");
            }

        } catch (SQLException ex) {
            if (c != null) {
                try {
                    c.rollback();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
        } finally {
            try {
                if (ps != null) {
                    ps.close();
                }
                if (c != null) {
                    c.setAutoCommit(true);
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Loans = new javax.swing.JTextField();
        AgreeButton = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setText("LOAN");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 28, 160, -1));

        jLabel2.setText("AMOUNT");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));
        getContentPane().add(Loans, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 280, -1));

        AgreeButton.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        AgreeButton.setText("By checking this, you have agreed to our Term's and condition and Data and Privacy Protection");
        getContentPane().add(AgreeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String loan = Loans.getText();
        if (AgreeButton.isSelected()) {

            AccountData(loan);
        } else if (!loan.matches("^\\d+(\\.\\d{1,2})?$")) {
            JOptionPane.showMessageDialog(null, "Please fill the information correctly!");
        } else {
            JOptionPane.showMessageDialog(null, "Please check the Term's and codition and data and privacy protection agreement!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        UserFront open = new UserFront(AccountNumber);
        open.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoanForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoanForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoanForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoanForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoanForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AgreeButton;
    private javax.swing.JTextField Loans;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
